##
## SPDX-FileCopyrightText: 2020 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-1-2020
##
##
version: 2.1
orbs:
  go: circleci/go@0.2.0
  splunk-app-package:
    jobs:
      package:
        docker:
          - image: circleci/buildpack-deps:stable
        steps:
          - checkout
          - run:
              name: Setup Environment
              command: |
                sudo apt-get update
                sudo apt-get install -y python2 python-pip python-virtualenv python3 python3.7 python3-pip python3-virtualenv
                python3.7 -m virtualenv ~/.venv -p python3
                source ~/.venv/bin/activate
                pip install splunk_add_on_ucc_framework
                pip install https://download.splunk.com/misc/packaging-toolkit/splunk-packaging-toolkit-1.0.1.tar.gz
                git clone https://github.com/livehybrid/addonfactory-ucc-generator.git /tmp/ucc/
                cp -R /tmp/ucc/splunk_add_on_ucc_framework ~/.venv/lib/python3.7/site-packages/
                echo "Moved modified UCC"
                ls -ltr ~/.venv/lib/python3.7/site-packages/splunk_add_on_ucc_framework
                which ucc-gen
          - run:
              name: Generate Addon
              command: |
                source ~/.venv/bin/activate
                [ ! -z "${CIRCLE_TAG}" ] && VERSION=${CIRCLE_TAG} || VERSION="0.0.0-${CIRCLE_BRANCH//\//_}"
                echo "-------------------------"
                echo "Building Version $VERSION"
                echo "-------------------------"
                ucc-gen --ta-version=$VERSION
          - run:
              name: Generating package
              command: |
                PACKAGE_ID=$(ls output/)
                BUILD_DIR=output/$PACKAGE_ID              
                source ~/.venv/bin/activate                
                slim generate-manifest $BUILD_DIR --update >/tmp/app.manifest   || true
                cp  /tmp/app.manifest  $BUILD_DIR/app.manifest
                mkdir -p build/package/splunkbase
                mkdir -p build/package/deployment
                slim package -o build/package/splunkbase $BUILD_DIR 
                mkdir -p build/package/deployment
                PACKAGE=$(ls build/package/splunkbase/*)
                slim partition $PACKAGE -o build/package/deployment/ || true
                slim validate $PACKAGE
          - persist_to_workspace:
              root: /home/circleci/project
              paths:
                - output
                - build
          - store_artifacts:
              path: build/package/splunkbase
              destination: build-package-splunkbase
          - store_artifacts:
              path: build/package/deployment
              destination: build-package-deployment
          - store_artifacts:
              path: build/VERSION
              destination: build-version
      publish-gh:
        docker:
          - image: circleci/python:3.7
        steps:
          - setup_remote_docker:
              docker_layer_caching: true
          - attach_workspace:
              at: /tmp/workspace
          - checkout
          - go/install
          - run:
              name: "Publish on GitHub"
              command: |
                PATH=$PATH:/usr/local/go/bin
                go get -v -u github.com/tcnksm/ghr
                [[ << pipeline.git.tag >> =~ ^v[0-9]*.[0-9]*.[0-9]*$ ]] || export ISPRE=-prerelease
                $HOME/go/bin/ghr -t ${GH_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${ISPRE} -delete "<< pipeline.git.tag >>" /tmp/workspace/build/package/splunkbase
                $HOME/go/bin/ghr -t ${GH_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${ISPRE} "<< pipeline.git.tag >>" /tmp/workspace/build/package/deployment

workflows:
  build:
    jobs:
      - splunk-app-package/package:
          name: package
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*.*$/
      - publish-gh:
          context:
            - gdi-github
          requires:
            - package
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*.*$/