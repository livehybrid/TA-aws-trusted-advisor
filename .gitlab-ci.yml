stages:
  - package-app
  - deploy

package-app:
  image: livehybrid/splunk-appbuilder:latest
  stage: package-app
  script:
    - sed -i 's/reporter.fail(reporter_output, file_path)/reporter.manual_check(reporter_output, file_path)/g' /usr/local/lib/python2.7/dist-packages/splunk_appinspect/checks/check_indexes_configuration_file.py
    - sed -i 's/reporter.fail(reporter_output, file_path, value\[1\])/reporter.warn(reporter_output, file_path, value\[1\])/g' /usr/local/lib/python2.7/dist-packages/splunk_appinspect/checks/check_saved_searches.py
    - sed -i 's/blacklist_conf(app, reporter.fail, "authentication.conf"/blacklist_conf(app, reporter.warn, "authentication.conf"/g' /usr/local/lib/python2.7/dist-packages/splunk_appinspect/checks/check_cloud_simple_app.py
    - make clean
    - make package
    - make package_test
    - cp out/packages/splunkbase/*.tar.gz out/packages/splunkbase/$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA.tar.gz
  artifacts:
    paths:
      - out/packages/splunkbase/$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA.tar.gz
    reports:
      junit: test-reports/*.xml

deploy:
  stage: deploy
  image:
    name: registry.gitlab.com/deviosec/containers/release:latest
    entrypoint: ["/bin/sh", "-i", "-c"]
  script:
    - cp $CI_PROJECT_DIR/out/packages/splunkbase/$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA.tar.gz $CI_PROJECT_DIR/out/packages/splunkbase/$CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_COMMIT_SHORT_SHA.tar.gz
    - curl https://gist.githubusercontent.com/livehybrid/f8e892d358fd9f9fa2dd97916516b5dd/raw/888b4e97f3751a76e4c24dc49b6d65301b166e05/gitlab-release.py -o /opt/gitlab-api/main.py
    - python3 /opt/gitlab-api/main.py
  only:
    - tags
