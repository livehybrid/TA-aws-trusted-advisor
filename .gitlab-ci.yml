stages:
  - build
#  - package-app
#  - deploy

build:
  image: circleci/buildpack-deps:stable
  stage: build
  script: |
    sudo apt-get update
    sudo apt-get install -y python2 python-pip python-virtualenv python3 python3.7 python3-pip python3-virtualenv
    python3.7 -m virtualenv ~/.venv -p python3
    source ~/.venv/bin/activate
    pip install pip==20.2
    pip install -r requirements_dev.txt || true
    pip install semantic_version==2.6.0
    sudo apt install npm
    echo "" > nextRelease.txt
    npx -p @semantic-release/exec -p semantic-release semantic-release --dry-run --plugins "@semantic-release/commit-analyzer,@semantic-release/exec" --analyzeCommits @semantic-release/commit-analyzer --verifyRelease @semantic-release/exec --verifyReleaseCmd 'echo ${nextRelease.version} > nextRelease.txt'
    Version=$(cat nextRelease.txt)
    echo "============"
    echo "$Version"
    echo "============"
    #source ~/.venv/bin/activate
    Version="v0.0.1"
    ucc-gen --ta-version="$Version"
    PACKAGE_ID=$(/bin/ls output/)
    BUILD_DIR=output/$PACKAGE_ID
    #source ~/.venv/bin/activate
    slim generate-manifest $BUILD_DIR --update >/tmp/app.manifest   || true
    cp  /tmp/app.manifest  $BUILD_DIR/app.manifest
    mkdir -p build/package/splunkbase
    mkdir -p build/package/deployment
    slim package -o build/package/splunkbase $BUILD_DIR
    mkdir -p build/package/deployment
    PACKAGE=$(ls build/package/splunkbase/*)
    slim partition $PACKAGE -o build/package/deployment/ || true
    slim validate $PACKAGE

#  image: livehybrid/splunk-appbuilder:latest
#  stage: package-app
#  script:
#    - sed -i 's/reporter.fail(reporter_output, file_path)/reporter.manual_check(reporter_output, file_path)/g' /usr/local/lib/python2.7/dist-packages/splunk_appinspect/checks/check_indexes_configuration_file.py
#    - sed -i 's/reporter.fail(reporter_output, file_path, value\[1\])/reporter.warn(reporter_output, file_path, value\[1\])/g' /usr/local/lib/python2.7/dist-packages/splunk_appinspect/checks/check_saved_searches.py
#    - sed -i 's/blacklist_conf(app, reporter.fail, "authentication.conf"/blacklist_conf(app, reporter.warn, "authentication.conf"/g' /usr/local/lib/python2.7/dist-packages/splunk_appinspect/checks/check_cloud_simple_app.py
#    - make clean
#    - make package
#    - make package_test
#    - cp out/packages/splunkbase/*.tar.gz out/packages/splunkbase/$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA.tar.gz
#  artifacts:
#    paths:
#      - out/packages/splunkbase/$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA.tar.gz
#    reports:
#      junit: test-reports/*.xml



#deploy:
#  stage: deploy
#  image:
#    name: registry.gitlab.com/deviosec/containers/release:latest
#    entrypoint: ["/bin/sh", "-i", "-c"]
#  script:
#    - cp $CI_PROJECT_DIR/out/packages/splunkbase/$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA.tar.gz $CI_PROJECT_DIR/out/packages/splunkbase/$CI_PROJECT_NAME-$CI_COMMIT_TAG-$CI_COMMIT_SHORT_SHA.tar.gz
#    - curl https://gist.githubusercontent.com/livehybrid/f8e892d358fd9f9fa2dd97916516b5dd/raw/888b4e97f3751a76e4c24dc49b6d65301b166e05/gitlab-release.py -o /opt/gitlab-api/main.py
#    - python3 /opt/gitlab-api/main.py
#  only:
#    - tags
